version: "3.8"

services:
  postgres:
    image: postgres:${POSTGRES_VERSION:-12.14-alpine}
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
    shm_size: '2gb'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-node-ogmios:
    image: cardanosolutions/cardano-node-ogmios:${OGMIOS_VERSION:-v5.6.0}_${CARDANO_NODE_VERSION:-1.35.7}-${NETWORK:-mainnet}
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "20"
    ports:
      - ${OGMIOS_PORT:-1337}:1337
    restart: on-failure
    volumes:
      - node-db:/db
      - node-ipc:/ipc
      - ./cardano-configurations/network/${NETWORK:-mainnet}:/config

  cardano-db-sync:
    image: inputoutput/cardano-db-sync:${CARDANO_DB_SYNC_VERSION:-13.1.0.2}
    command: [
      "--config", "/config/cardano-db-sync/config.json",
      "--socket-path", "/node-ipc/node.socket"
    ]
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - RESTORE_SNAPSHOT=${RESTORE_SNAPSHOT:-}
      - RESTORE_RECREATE_DB=N
    depends_on:
      - cardano-node-ogmios
      - postgres
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - ./cardano-configurations/network/${NETWORK:-mainnet}:/config
      - db-sync-data:/var/lib/cexplorer
      - node-ipc:/node-ipc
    restart: on-failure
    stop_signal: SIGINT
    logging:
      driver: "local"
      options:
        max-size: "200k"
        max-file: "10"

  koios-lite:
    build:
      context: .
      target: koios-lite
    ports:
      - ${KOIOS_LITE_PORT:-8050}:8050
    depends_on:
      - "postgres"
    environment:
      - NETWORK=${NETWORK:-mainnet}
      - PGHOST=${PGHOST:-postgres}
      - PGPORT=${PGPORT:-5432}
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    restart: on-failure
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

#  koios-postgraphile:
#    build:
#      context: .
#      target: koios-postgraphile
#    command: [
#      "--host", "0.0.0.0",
#      "--port", "8150",
#      "--connection", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${PGHOST}:${PGPORT}/${POSTGRES_DB}",
#      "--schema", "grest",
#      "--enhance-graphiql",
#      "--disable-default-mutations",
#      "--append-plugins", "postgraphile-plugin-connection-filter",
#    ]
#    ports:
#      - ${KOIOS_POSTGRAPHILE_PORT:-127.0.0.1:8150}:8150
#    depends_on:
#      - "koios-lite"
#    environment:
#      - PGHOST=${PGHOST:-postgres}
#      - PGPORT=${PGPORT:-5432}
#      - POSTGRES_DB_FILE=/run/secrets/postgres_db
#      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
#      - POSTGRES_USER_FILE=/run/secrets/postgres_user
#    restart: on-failure
#    secrets:
#      - postgres_db
#      - postgres_password
#      - postgres_user
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200k"
#        max-file: "10"

secrets:
  postgres_db:
    file: ./placeholder-secrets/postgres_db
  postgres_password:
    file: ./placeholder-secrets/postgres_password
  postgres_user:
    file: ./placeholder-secrets/postgres_user
volumes:
  db-sync-data:
  node-db:
  node-ipc:
  postgres-data:
  kupo-db:
